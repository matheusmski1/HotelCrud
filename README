# Sobre os testes

SÃ£o testes que irÃ£o garantir a interligaÃ§Ã£o entre o projeto e o banco de dados. Que irÃ¡ colocar itens mockados dentro do banco e limpar o banco inteiro para poder garantir que as funÃ§Ãµes estÃ£o funcionando corretamente. Mantendo o padrÃ£o desejado dentro do banco e garantindo que todos os dados serÃ£o incluidos dentro do banco.

## ðŸ’» PrÃ©-requisitos

Antes de comeÃ§ar, verifique se vocÃª atendeu aos seguintes requisitos:

- Docker
- Docker-compose

## ðŸš€ Instalando teste tecnico!

Linux e macOS:

```
(Atencao, o projeto ira rodar em porta 5000, caso a porta nao esteja disponivel, o projeto nao iniciara!)

1- Clone o projeto na sua maquina
1- No terminal, dentro da pasta do projeto abra o terminal e digite docker-compose up, que ira criar o banco de dados e o sistema dentro do proprio docker!
```

## â˜• Usando Teste tecnico

Para usar o teste tecnico, siga estas etapas:

```
Primeiramente, existe a collection no postman! segue download: https://drive.google.com/file/d/1qfFTJmv2oupDP57gQfNQz-_zs59-ZILO/view?usp=sharing
Apos, existe um padrao para seguir nesta arquitetura, que seria em "escada" onde hotel seria a parte mais alta e se comunica com reservation (vice-versa) e reservation com guest (vice-versa),
Primeiramente, comecaremos criando o Hotel, que retornara o hotelId,
Apos isto, criamos o Guest, que retornara o guestId,
Junto destes dois, criaremos a reservation, adicionando o guestId e o hotelId.

Caso queira trocar o status da reserva, uitilize o endpoint updateStatus

Caso queria entender o relacionamento entre collections, existem os endpoints que fazem a comunicacao entre elas (reservation > guest , reservation > hotel , hotel > reservation, guest > reservation) !
```
